% This function is called by generate_run.m
%		zipf is a struct generated by generate_zip.m
%		as_gravity is not really used
function scenario = generate_scenario(zipf, object_reachability_matrix, total_demand, price)
	global severe_debug;

	% Input_consistency_checks{
		if severe_debug
			if length(price) != size(object_reachability_matrix, 1)
				error(["length of price is ",num2str( length(price) ), " while rows of object_reachability_matrix are ",\
						size(object_reachability_matrix, 1) ]);
			endif

			if size(object_reachability_matrix,2) != zipf.obj_num
				size(object_reachability_matrix,2)
				zipf.obj_num
				error("Inconsistency in the number of objects");
			endif
		endif
	% }Input_consistency_checks



	as_num = size(object_reachability_matrix, 1);
	scenario.zipf = zipf;

	% rank_matrix(j,k) == 1 iff object j has rank k.
	% Initially, the object j has rank k=j.
	scenario.rank_matrix = sparse( eye (zipf.obj_num) );
	scenario.TransitPrice = price;

	% Intitialization
	scenario.TrafficDemand = zeros(1, zipf.obj_num);
	
	scenario.object_reachability_matrix = object_reachability_matrix;

	scenario.TrafficDemand = round( zipf.distr * scenario.rank_matrix * total_demand );

	% {CHECK OUTPUT CONSISTENCY
	if severe_debug
		if size(scenario.object_reachability_matrix,2) != length(scenario.TrafficDemand)
			disp("size(scenario.object_reachability_matrix,2)=")
			size(scenario.object_reachability_matrix,2)
			disp("size(object_reachability_matrix,2)")
			size(object_reachability_matrix,2)
			disp("length(scenario.TrafficDemand)")
			length(scenario.TrafficDemand)
			disp("zipf.obj_num");
			zipf.obj_num
			error("Generated scenario is malformed");
		end
	end
	% }CHECK OUTPUT CONSISTENCY
		

	%{Write__on_files
			SparseObjectReachabilityMatrix = scenario.ObjectReachabilityMatrix;
			filename = strcat("~/temp/prova_normal_binary-ctlg_",num2str(scenario.obj_num),".txt");
			save("-binary",filename,"SparseObjectReachabilityMatrix");
			filename = strcat("~/temp/prova_normal_text-ctlg_",num2str(scenario.obj_num),".txt")
			save("-text",filename,"SparseObjectReachabilityMatrix");


			SparseObjectReachabilityMatrix = sparse(scenario.ObjectReachabilityMatrix);
			filename = strcat("~/temp/prova_sparse_binary-ctlg_",num2str(scenario.obj_num),".txt");
			save("-binary",filename,"SparseObjectReachabilityMatrix");
			filename = strcat("~/temp/prova_sparse_text-ctlg_",num2str(scenario.obj_num),".txt")
			save("-text",filename,"SparseObjectReachabilityMatrix");
	%}Write__on_files

endfunction

