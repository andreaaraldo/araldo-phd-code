Q = {1 2 3 4};
s = [1 1 2 5];
U = [1 2 2 3];
hmin = [0.1 0.01 0.02 0.03];
hmax = [2 0.01 0.02 0.03];
bar_r_BF = 1;
bar_bar_r_BF = 2;
bar_r_OF = 1;
bar_bar_r_OF = 2;
m_BF = 1;
m_prime_BF = 0.5;
m_OF = 1;
m_prime_OF = 0.5;
Categories_card = 4;
V_card = 3;
O_BF_card = 0;
O_OF_card = 0;
O_LQ_card = 4;
O_HQ_card = 0;
K = 5000;
M = 5000;
S = 100;
a = [[0 0 1]
             [0 0 1]
             [0 0 1]
             [0 0 1]];
b = [[0 100 100]
             [100 0 100]
             [100 100 0]];
d = [[1 0 0]
             [0 0 0]
             [0 0 0]
             [0 0 0]];

// RANGE_INT O [1 ,4]
// RANGE_INT V [1 ,3]
TotalDemandInverse = 1;
// RANGE_INT O_BF [0 ,-1]
// RANGE_INT O_F [0 ,-1]
// RANGE_INT O_OF [0 ,-1]
// RANGE_INT O_V [1 ,4]
// RANGE_INT O_LQ [1 ,4]
// RANGE_INT O_HQ [0 ,-1]

// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2.0000000000e+00
// MILP solution norm |x| (Total, Max)            4.90400e+01  1.00000e+00
// MILP solution error (Ax=b) (Total, Max)        0.00000e+00  0.00000e+00
// MILP x bound error (Total, Max)                0.00000e+00  0.00000e+00
// MILP x integrality error (Total, Max)          0.00000e+00  0.00000e+00
// MILP slack bound error (Total, Max)            6.91216e-13  6.91216e-13
// MILP indicator slack bound error (Total, Max)  0.00000e+00  0.00000e+00
// 

v = [];
w = [];
I = [[[0 1 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]];
x = [[[1 1 1 1]
                 [1 1 1 1]
                 [1 1 1 1]]
             [[1 1 1 1]
                 [1 1 1 1]
                 [1 1 1 1]]
             [[1 1 1 1]
                 [1 1 1 1]
                 [1 1 1 1]]
             [[1 1 1 1]
                 [1 1 1 1]
                 [1 1 1 1]]];
y = [[[[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]]
             [[[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]]
             [[[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]]
             [[[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]
                 [[0 0 0]
                     [0 0 0]
                     [0 0 0]]]];
y_to_u_q_dependent = [[[0 0.01 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]];
y_to_u = [[0.01 0 0]
             [0 0 0]
             [0 0 0]
             [0 0 0]];
y_from_source = [[[0.01 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]
             [[0 0 0 0]
                 [0 0 0 0]
                 [0 0 0 0]]];
r = [[0.01 0 0]
             [0 0 0]
             [0 0 0]
             [0 0 0]];
z = [];

